apiVersion: v1
kind: Pod
metadata:
  creationTimestamp: "2020-05-25T03:56:36Z"
  labels:
    app: registry
  name: registry
spec:
  hostAliases:
  - ip: "127.0.0.1"
    hostnames:
    - "cloudctl"
  containers:
  - env:
    - name: PATH
      value: /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin
    - name: TERM
      value: xterm
    - name: HOSTNAME
      value: cloudctl
    - name: container
      value: podman
    - name: versOCP
      value: {{ version_openshift }}
    - name: BUILDAH_ISOLATION
      value: chroot
    image: quay.io/containercraft/one:nightlies
    name: one
    ports:
    - containerPort: 80
      hostPort: 8080
      protocol: TCP
    - containerPort: 5000
      hostPort: 5000
      protocol: TCP
    - containerPort: 22
      hostPort: 2022
      protocol: TCP
    resources: {}
    securityContext:
      allowPrivilegeEscalation: true
      capabilities: {}
      privileged: false
      readOnlyRootFilesystem: false
    volumeMounts:
    - mountPath: /root/deploy:z
      name: var-home-core-deploy
    workingDir: /root/deploy
  - command:
    - /etc/docker/registry/config.yml
    env:
    - name: PATH
      value: /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin
    - name: TERM
      value: xterm
    - name: HOSTNAME
      value: registry
    - name: container
      value: podman
    - name: REGISTRY_AUTH
      value: htpasswd
    - name: REGISTRY_AUTH_HTPASSWD_REALM
      value: RegistryRealm
    - name: REGISTRY_AUTH_HTPASSWD_PATH
      value: /root/auth/htpasswd
    image: docker.io/library/registry:2.7.0
    name: registry2
    resources: {}
    securityContext:
      allowPrivilegeEscalation: true
      capabilities: {}
      privileged: false
      readOnlyRootFilesystem: false
    volumeMounts:
    - mountPath: /var/lib/registry:z
      name: root-deploy-mirror
    - mountPath: /etc/docker/registry/config.yml:z
      name: root-deploy-registry-config
    - mountPath: /root/ssl:z
      name: root-deploy-secrets-registry-ssl
    - mountPath: /root/auth/htpasswd:z
      name: root-deploy-secrets-registry-htpasswd
    workingDir: /
  - command:
    - nginx
    - -g
    - daemon off;
    env:
    - name: PATH
      value: /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin
    - name: TERM
      value: xterm
    - name: HOSTNAME
      value: nginx
    - name: container
      value: podman
    - name: NGINX_VERSION
      value: 1.17.10
    - name: NJS_VERSION
      value: 0.3.9
    - name: PKG_RELEASE
      value: 1~buster
    image: docker.io/library/nginx:latest
    name: nginx
    resources: {}
    securityContext:
      allowPrivilegeEscalation: true
      capabilities: {}
      privileged: false
      readOnlyRootFilesystem: false
    volumeMounts:
    - mountPath: /usr/share/nginx/html:z
      name: root-deploy-nginx-html
    workingDir: /
  volumes:
  - hostPath:
    name: root-deploy
      path: /root/deploy
      type: Directory
  - hostPath:
    name: root-deploy-mirror
      path: /root/deploy/mirror
      type: Directory
  - hostPath:
    name: root-deploy-registry-config
      path: /root/deploy/mirror/config.yml
      type: File
  - hostPath:
    name: root-deploy-secrets-registry-ssl
      path: /root/deploy/registry/secrets/ssl
      type: Directory
  - hostPath:
    name: root-deploy-secrets-registry-htpasswd
      path: /root/deploy/secrets/registry/htpasswd
      type: File
  - hostPath:
    name: root-deploy-nginx-html
      path: /root/deploy/nginx
      type: Directory
status: {}
