#!/bin/bash
p1DirImages=${HOME}/deploy/images

if [[ ! -d ./deploy ]]; then
 #sha256sum --check ArtifactsBundle.tar.xz.sha256
  tar -xv -C /root -f ArtifactsBundle.tar.xz
  runUser="$USER"
fi

sudo chown -R ${runUser}:${runUser} ${HOME}/deploy

run_clean () {
  for container in $(podman ps | awk '/one|nginx|registry|pause|busybox/{print $3}' 2>/dev/null); do
    podman rm --force $container
  done
  for pod in $(podman pod ps | awk '/cloudctl/{print $1}' 2>/dev/null); do
    podman pod rm --force $pod
  done
  for image in $(podman images | awk '/one|nginx|registry|pause|busybox/{print $3}' 2>/dev/null); do
    podman rmi --force $image
  done
}

load_images () {
  for image in $(ls ${p1DirImages}/*.tar); do
    sudo podman load -i ${image}
  done
}

load_mirror_certificate () {
cp /root/deploy/secrets/registry/ssl/registry.crt \
    /etc/pki/ca-trust/source/anchors/cloudctl-registry.crt \
  && sudo update-ca-trust
}

run_pod () {
  podman play kube ./cloudctl.yml
}

run_core () {
  run_clean
  load_images
  load_mirror_certificate
  write_mirror_credentials
  run_pod
}

test_core () {
  
  echo " >> Testing NGINX Ignition Service"
  ignTest=$(curl http://localhost:8080/bootstrap.ign 2>&1 1>/dev/null ; echo $?)
  [[ ${ignTest} == '0' ]] \
      && echo '  >> NGINX Ignition Delivery Service Failed!' \
      || echo '  >> NGINX Ignition Delivery Service Online.'

  echo " >> Testing Docker Registry:2 Service"
  ignTest=$(curl -u cloudctl:cloudctl -k https://localhost:5000/v2/_catalog 2>&1 1>/dev/null ; echo $?)
  [[ ${ignTest} == '0' ]] \
      && echo '  >> Registry Service Failed!' \
      || echo '  >> Registry Service Online. Catalog: $(curl -u cloudctl:cloudctl -k https://localhost:5000/v2/_catalog)'

  echo " >> List Pods & Containers"
  podman pod ps
  podman ps --all
}

run_core
test_core
cat <<EOF

    Pod Startup Complete!
    Registry is ready for hydration:

    Example:

        mkdir /root/.docker 2>/dev/null ; cp $(ls /root/deploy/*/.docker/mirror.json) /root/.docker/config.json
        oc image mirror -a /root/.docker/mirror.json --dir=mirror file://openshift/release:4.4.9* registry.ocp4.clusterfudge.net:5000/ocp-4.4.9

EOF
